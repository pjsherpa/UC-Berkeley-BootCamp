[
  {
    Team: "ToDo:Team Name",
    Title: "Wiki-Tree",
    Description:
      "When the user inputs a name of a specific tree a list of relevant Wikipedia articles and a list of most recent Tumblr blog posts that are tagged with the tree name will pop up for that tree.",
    userStory: [
      "As a botanist studying trees I want to find information on specific species of trees so that I can further develop my research on these species of trees.",
    ],
    wireFrame: "To be uploaded in a separate screenshot",
    cssFrameWork: "",
    acceptanceCriteria: [],
    API: "Wikipedia API, Tumblr API",
    taskList: [
      "Create HTML + CSS files",
      "Create JavaScript file",
      "Break down JavaScript content between client-side APIs, server-side APIs and normal JavaScript",
      "Set up a button to reset homepage",
      "Save previously searched trees in local storage and add links to these trees in a search history",
    ],
    members: ["Abraham", "Ha", "Hunter", "Kayla"],
  },
  {
    Team: "HTML Tag Team",
    Title: "Wave Break",
    Description: "",
    userStory: [
      "When I open the deployed application, I see a dashboard with images of waves, the local time and weather, and a nav bar to search for beaches near the inputted artea nd mile preference.",
      "When I insert my city/zip code and mile preference, I am given a list of beaches in that area that meet the criteria",
      "When I click on a displayed beach in the search results, I am given the beach information, including weather (and mabye directions).",
      "When I click the 'Save' button for a beach, the beach will be added to my saved folder, accessd through the nave bar.",
    ],
    wireFrame: "",
    cssFrameWork: "",
    acceptanceCriteria: [],
    API: "",
    taskList: ["", "", "", "", ""],
    members: ["Hanna", "Jaden", "Kaihuan", "Kristina"],
  },
  {
    Team: "The Four Loopers",
    Title: "Marvel API",
    Description:
      "Users will be able to view information about Marvel characters. Users will be able to view videos, movies, comics, wiki/fan pages and more about a selected character. We are thinking of using the marvel API as the main search function and for the displaying of comics and other APIs such as YouTube or IMBD in order to display videos and movies relating to the searched character.",
    userStory: [""],
    wireFrame: "",
    cssFrameWork: "",
    acceptanceCriteria: [],
    API: "",
    taskList: ["", "", "", "", ""],
    members: ["Clarence", "Shawn", "Zach", "Luan"],
  },
  {
    Team: "Team Lorem Ipsum",
    Title: "Brace Yourself",
    Description:
      "As a user seeking to bar hop for the night I want to generate the most ideal route of bars that lead back to my place of lodging so that I can have a safe and fun night and eventually end up close to home",
    userStory: [""],
    wireFrame: "",
    cssFrameWork: "",
    acceptanceCriteria: [
      "When given lodging endpoint",
      "When given desired walking distance",
      "When given number of bars to visit",
      "Then the app will provide a minimal list of starting points",
      "When given a list of starting point",
      "Then the user will choose a starting point",
      "Then the app will generate a list of bars with the starting point being at the bar thatâ€™s furthest away, generate an intuitive route to the following bars and eventually back to my place of lodging",
      "Then the app will provide the yelp page/review for bars listed",
    ],
    API: "",
    taskList: ["", "", "", "", ""],
    members: ["Dan T", "Michael", "Thomas", "Wenfeng"],
  },
  {
    Team: "We Deserve a Raise",
    Title: "",
    Description: "",
    userStory: [
      "As A person looking for a quick laugh",
      "I WANT to find funny jokes and gifs",
      "SO THAT I can feel better",
    ],
    wireFrame: "",
    cssFrameWork: "",
    acceptanceCriteria: [
      "GIVEN when I go to the site:",
      "WHEN I click on a generator button,",
      "THEN I am presented with a corresponding funny thing.",
      "WHEN I want to see another of the same type,",
      "THEN I have the option to see another from the same page.",
      "WHEN I want to go back and see something different,",
      "THEN I have the option to click a button and go back to the main page.",
    ],
    API: "",
    taskList: ["", "", "", "", ""],
    members: ["Amberlie", "Dennis", "Noah", "Rachael"],
  },
  {
    Team: "Internet Explorers",
    Title: "",
    Description: "",
    userStory: [
      "As a person looking for a job I want to find jobs that match my skills So I can find a job that matches my preferences in a new role",
      "As a person searching through multiple job postings I want to compare postings based on employee feedback So that I can select companies that provide a better working environment",
    ],
    wireFrame: "",
    cssFrameWork: "",
    acceptanceCriteria: [],
    API: ["LinkedIn or Jobs API", "Glassdoor API"],
    taskList: ["", "", "", "", ""],
    members: ["Blessed", "Maryam", "John", "Ryan"],
  },
  {
    Team: "rm -rf the_competition",
    Title: "AirSoup",
    Description: "",
    userStory: [
      "Our users are concerned about bushfires and air quality degrading around the world and they are the same people who love eating outside.",
      "SO THAT users can plan a trip depending on the air quality.",
    ],
    wireFrame: "",
    cssFrameWork: "",
    acceptanceCriteria: [],
    API: [
      {
        name: "Restaurants: Yelp Fusion API",
        href: "https://www.yelp.com/developers/documentation/v3/get_started",
      },
      {
        name: "Air Polution: OpenWeatherMap",
        href: "https://openweathermap.org/api/air-pollution#:~:text=Air%20Pollution%20API%20concept,-Air%20Pollution%20API&text=Besides%20basic%20Air%20Quality%20Index,PM2.5%20and%20PM10)",
      },
    ],
    taskList: ["", "", "", "", ""],
    members: ["Cassie", "Dina", "Makennah", "PJ"],
  },
  {
    Team: "Binary Trio",
    Title: "Auto Referee",
    Description:
      "We are making app that will allow users to understand any sport that they are watching or trying to play themselves. At minimum we will provide the basic rules for all the major sports and if we have time an additional functionality that will help the user 'go down the rabbit hole'",
    userStory: [
      "As a user We will be able to look up our desired sport So that we can find the basic rules for it.",
      "As a user We can visit a landing page That will allow us to select our desired sport",
      "As a user Clicking on a sport will take us to an individual page",
      "As a user Clicking on a button Will allow us to view additional information about the sport",
    ],
    wireFrame: "",
    cssFrameWork: "",
    acceptanceCriteria: [],
    API: [""],
    taskList: [
      "Collaborate to decide Wire Frames for Landing Page and Indvidual sports pages.",
      "Collaborate on List of API",
      "Colaborage on distribution of coding tasks among group (HTML,CSS,Javascript) duties",
    ],
    members: ["Gina", "Jose SM", "mesky"],
  },
  {
    Team: "Lazy Loaders",
    Title: "Does it Stream",
    Description:
      "Looks for information of the movie/show being searched for when search button is clicked. Displays movie/show image, information, and place where it can be streamed.",
    userStory: [
      "As a user I want to find the information of a movie/show and also where it is streaming online, so that I can easily watch it.",
    ],
    wireFrame: "",
    cssFrameWork: "Materializecss",
    acceptanceCriteria: [],
    API: ["Streaming Availability", "Movie Data Base Alternative"],
    taskList: ["", "", "", "", ""],
    members: ["Eddy", "Darwin", "Makennah", "PJ"],
  },
  {
    Team: "the Rushin Hackers",
    Title: "Genre Generator",
    Description:
      "A webpage to search by genres. Search youtube or soundcloud for audio samples to play when a band is selected. Checks for local concerts nearby and links to different sites to buy tickets at.",
    userStory: [""],
    wireFrame: "",
    cssFrameWork: "",
    acceptanceCriteria: [],
    API: ["YouTube", "Soundcloud", "TicketMaster"],
    taskList: [
      "Build landing page.",
      "Make a dropdown list for genres for the search to pull from.",
      "In reverse, search for a band to see what genres it is associated with.",
      "Program search to either search for genres, bands or songs by another dropdown.",
      "Run a javascript to generate lists of clickable buttons for each band or song pulled.",
      "Program function to make buttons lead to secondary page with audio samples and list of shows.",
      "Fetch data for bands by genre. Fetch the audio clips or links to songs from youtube or soundcloud. Function to check",
      "ticketmaster for local shows. Link to redirect to ticket site to purchase tickets.",
    ],
    members: ["Andy", "Joshua", "Nan", "Zaira"],
  },
  {
    Team: "Control Alt Elite",
    Title: "Kitchen Sink Cocktails",
    Description:
      "Kitchen Sink Cocktails, would include an input field in which the user can input a cocktail ingredient. The idea is that the user would input an ingredient they currently have in their kitchen, that they would like to create a cocktail around i.e. vodka or maraschino cherries. Once submitted, the the search would return a list of cocktail recipes including that ingredient. Alternatively, the user can search for a cocktail recipe by name.",
    userStory: [""],
    wireFrame: "",
    cssFrameWork: "",
    acceptanceCriteria: [],
    API: ["TheCocktailDB"],
    taskList: [],
    members: ["Jacob", "Jaime", "Kehinde", "Maddy"],
  },
  {
    Team: "The Go GITers",
    Title: "Kitchen Sink Cocktails",
    Description: "",
    userStory: [
      "Users can take a quiz to gauge how they're feeling",
      "Based on quiz results, user will be suggested books or music playlists",
      "User 'moods' will be saved from day to day and a user can decide to pick up from where they left off or go in a different direction",
      "Previous day data will be saved in local storage",
    ],
    wireFrame: "",
    cssFrameWork: "",
    acceptanceCriteria: [],
    API: ["Spotify API", "Book Riot", "Google Books", "Mood API"],
    taskList: [
      { Owner: "Sherri", taskOne: "API research" },
      {
        Owner: "Jose",
        taskOne: "https://www.happyhues.co/palettes/14",
        taskTwo: "Color/mood research",
      },
      {
        Owner: "Savannah",
        taskOne: "Start on Wireframe",
        taskTwo:
          "Create User Stories: What does it actually do? How are we going to measure succes?",
      },
    ],
    members: ["Jacob", "Jaime", "Kehinde", "Maddy"],
  },
];
